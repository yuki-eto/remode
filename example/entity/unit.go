// Code generated by generate_code script - DO NOT EDIT.
package entity

import (
	"github.com/juju/errors"
	"go.knocknote.io/rapidash"
)

type Unit struct {
	ID       uint64 `csv:"Id"`
	Type     string `csv:"Type"`
	Rarity   string `csv:"Rarity"`
	Name     string `csv:"Name"`
	MaxCount uint16 `csv:"MaxCount"`
}

type Units []*Unit

func (e *Unit) DecodeRapidash(dec rapidash.Decoder) error {
	e.ID = dec.Uint64("id")
	e.Type = dec.String("type")
	e.Rarity = dec.String("rarity")
	e.Name = dec.String("name")
	e.MaxCount = dec.Uint16("max_count")
	return dec.Error()
}

func (e *Units) DecodeRapidash(dec rapidash.Decoder) error {
	count := dec.Len()
	*e = make([]*Unit, count)
	for i := 0; i < count; i++ {
		var v Unit
		if err := v.DecodeRapidash(dec.At(i)); err != nil {
			return errors.Trace(err)
		}
		(*e)[i] = &v
	}
	return nil
}

func (e *Unit) Struct() *rapidash.Struct {
	s := rapidash.NewStruct("units")
	s.FieldUint64("id")
	s.FieldString("type")
	s.FieldString("rarity")
	s.FieldString("name")
	s.FieldUint16("max_count")
	return s
}
